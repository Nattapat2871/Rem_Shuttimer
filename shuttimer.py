import os
import time
import tkinter as tk
import threading
import webbrowser  # ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå

def get_entry_value(entry):
    """‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 0"""
    value = entry.get().strip()  # ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤-‡∏´‡∏•‡∏±‡∏á
    return int(value) if value.isdigit() else 0  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ 0

def shutdown():
    """‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏ô UI"""
    global countdown_running, remaining_time
    
    # ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢ = 0
    hours = get_entry_value(hour_entry) * 3600
    minutes = get_entry_value(minute_entry) * 60
    seconds = get_entry_value(second_entry)
    remaining_time = hours + minutes + seconds  # ‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    if remaining_time == 0:
        status_label.config(text="‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
        return

    countdown_running = True
    status_label.config(text=f"üîµ ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏õ‡∏¥‡∏î‡πÉ‡∏ô {remaining_time} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
    update_countdown()  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á

    # ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏à‡∏ö‡∏•‡∏á
    def shutdown_after_delay():
        time.sleep(remaining_time)
        if countdown_running:
            os.system("shutdown /s /t 0")

    threading.Thread(target=shutdown_after_delay, daemon=True).start()

def update_countdown():
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå‡∏ö‡∏ô UI"""
    global remaining_time, countdown_running
    if remaining_time > 0 and countdown_running:
        hours = remaining_time // 3600
        minutes = (remaining_time % 3600) // 60
        seconds = remaining_time % 60
        countdown_label.config(text=f"‚è≥ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {hours} ‡∏ä‡∏°. {minutes} ‡∏ô‡∏≤‡∏ó‡∏µ {seconds} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
        remaining_time -= 1
        root.after(1000, update_countdown)  # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ã‡πâ‡∏≥‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    elif remaining_time <= 0:
        countdown_label.config(text="üî¥ ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!")
        status_label.config(text="üõë ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î...")

def cancel_shutdown():
    """‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á"""
    global countdown_running
    countdown_running = False
    os.system("shutdown /a")  # ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á Windows
    countdown_label.config(text="‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á")
    status_label.config(text="üîµ ‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß")

def open_link():
    """‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"""
    webbrowser.open("https://nattapat2871.online")  # üîó ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á UI
root = tk.Tk()
root.title("‡∏ï‡∏±‡∏ß‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á")
root.geometry("350x280")  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡∏û‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
countdown_running = False
remaining_time = 0

# ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á UI
tk.Label(root, text="‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á:").pack(pady=5)

frame = tk.Frame(root)
frame.pack()

# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á / ‡∏ô‡∏≤‡∏ó‡∏µ / ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
hour_entry = tk.Entry(frame, width=5)
hour_entry.pack(side=tk.LEFT)
tk.Label(frame, text="‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á").pack(side=tk.LEFT, padx=5)

minute_entry = tk.Entry(frame, width=5)
minute_entry.pack(side=tk.LEFT)
tk.Label(frame, text="‡∏ô‡∏≤‡∏ó‡∏µ").pack(side=tk.LEFT, padx=5)

second_entry = tk.Entry(frame, width=5)
second_entry.pack(side=tk.LEFT)
tk.Label(frame, text="‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ").pack(side=tk.LEFT, padx=5)

btn_start = tk.Button(root, text="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á", command=shutdown, bg="green", fg="white")
btn_start.pack(pady=5)

btn_cancel = tk.Button(root, text="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á", command=cancel_shutdown, bg="red", fg="white")
btn_cancel.pack(pady=5)

# ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
countdown_label = tk.Label(root, text="", font=("Arial", 14))
countdown_label.pack(pady=10)

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
status_label = tk.Label(root, text="", font=("Arial", 12))
status_label.pack(pady=5)

# üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á
link_label = tk.Label(root, text="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°", fg="blue", cursor="hand2")
link_label.pack(side=tk.BOTTOM, anchor="se", padx=10, pady=5)
link_label.bind("<Button-1>", lambda e: open_link())  # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
root.mainloop()
